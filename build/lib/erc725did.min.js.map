{"version":3,"sources":["webpack://erc725did/webpack/universalModuleDefinition","webpack://erc725did/webpack/bootstrap","webpack://erc725did/./src/utils.js","webpack://erc725did/./src/identity.js","webpack://erc725did/./src/index.js","webpack://erc725did/./src/erc725did.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","deployContract","async","web3","abi","bytecode","args","from","gas","Error","contract","eth","Contract","deploy","data","arguments","send","catch","console","log","connectContract","address","parse","did","sections","match","parts","method","identifier","path","fragment","getTypeByCode","code","IdentityABI","contracts_Identity","IdentityBytecode","KeyManagerABI","KeyManager","src_identity","[object Object]","identity","keyManager","defaultGas","options","slice","ownerAddress","methods","owner","manager","managementKeyIds","getKeysByPurpose","publicKey","Promise","all","map","keyId","getKey","id","type","controller","publicKeyHex","didDoc","@context","JSON","stringify","e","purpose","event","addKey","events","KeyAdded","returnValues","keyType","removeKey","KeyRemoved","kill","__webpack_exports__","init"],"mappings":"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","file":"erc725did.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"erc725did\"] = factory();\n\telse\n\t\troot[\"erc725did\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export const deployContract = async function ({ web3, abi, bytecode, args = [], from, gas = 3000000 }) {\n  if (!web3) throw new Error('There is no web3 provider.')\n  if (\n    abi === null ||\n    bytecode === null ||\n    from === null\n    ) {\n      throw new Error('abi, bytecode or from should not be null.')\n    }\n    \n    const contract = new web3.eth.Contract(abi)\n    const instance = await contract.deploy({\n      data: bytecode,\n      arguments: args\n    }).send({\n      from,\n      gas\n    }).catch(console.log)\n    return instance\n  }\n  \nexport const connectContract = async function ({ web3, abi, address }) {\n  if (!web3) throw new Error('There is no web3 provider.')\n  if (abi === null || address === null) {\n    throw new Error('abi, bytecode or from should not be null.')\n  }\n  return new web3.eth.Contract(abi, address)\n}\n\nexport const parse = function (did) {\n  if (did === '') throw new Error('Missing DID.')\n  const sections = did.match(/^did:([a-zA-Z0-9_]+):([[a-zA-Z0-9_.-]+)(\\/[^#]*)?(#.*)?$/)\n  if (sections) {\n    const parts = { did: sections[0], method: sections[1], identifier: sections[2] }\n    if (sections[3]) parts.path = sections[3]\n    if (sections[4]) parts.fragment = sections[4]\n    return parts\n  }\n  throw new Error(`Invalid DID: ${did}`)\n}\n\nexport const getTypeByCode = function (code) {\n  if (code === 1) {\n    return 'EcdsaVerificationKey2019'\n  } else if (code === 2) {\n    return 'RsaVerificationKey2019'\n  }\n}\n","import { deployContract, connectContract, parse, getTypeByCode } from './utils.js'\nimport IdentityMeta from '../build/contracts/Identity.json'\nimport KeyManagerMeta from '../build/contracts/KeyManager.json'\nconst IdentityABI = IdentityMeta.abi\nconst IdentityBytecode = IdentityMeta.bytecode\nconst KeyManagerABI = KeyManagerMeta.abi\n\nclass Identity {\n  constructor (web3, did = null) {\n    this.web3 = web3\n    this.did = did\n    this.from = null\n    this.identity = null\n    this.keyManager = null\n    this.defaultGas = 480000\n  }\n\n  async init ({ from, gas } = {}) {\n    if (this.did) {\n      const { identifier } = parse(this.did)\n      this.identity = await connectContract({\n        web3: this.web3,\n        abi: IdentityABI,\n        address: identifier\n      })\n    } else {\n      this.identity = await deployContract({\n        web3: this.web3,\n        abi: IdentityABI,\n        bytecode: IdentityBytecode,\n        args: [from],\n        from,\n        gas\n      })\n      this.did = `did:erc725:${this.identity.options.address.slice(2)}`\n    }\n\n    const ownerAddress = await this.identity.methods.owner().call()\n    this.keyManager = await connectContract({\n      web3: this.web3,\n      abi: KeyManagerABI,\n      address: ownerAddress\n    })\n    this.from = await this.keyManager.methods.manager().call()\n  }\n\n  async getDid () {\n    return this.did\n  }\n\n  async resolve () {\n    try {\n      const managementKeyIds = await this.keyManager.methods.getKeysByPurpose(1).call()\n      const unformatedPublicKey = await Promise.all(\n        managementKeyIds.map(async (keyId) => {\n          return this.keyManager.methods.getKey(keyId).call()\n        })\n      )\n      const publicKey = unformatedPublicKey.map((key, i) => {\n        return {\n          id: `${this.did}#owner-${i + 1}`,\n          type: getTypeByCode(key[1]),\n          controller: this.did,\n          publicKeyHex: key[2].slice(2)\n        }\n      })\n      const didDoc = {\n        '@context': 'https://w3id.org/did/v1',\n        id: this.did,\n        publicKey\n      }\n      return JSON.stringify(didDoc)\n    } catch (e) {\n      throw new Error(`Resolve failed. Message: ${e}`)\n    }\n  }\n\n  async addKey (key, purpose, type) {\n    try {\n      const receipt = await this.keyManager.methods.addKey(key, purpose, type).send({\n        from: this.from,\n        gas: this.defaultGas\n      })\n      const event = receipt.events.KeyAdded.returnValues\n      return {\n        key: event.key,\n        purpose: event.purpose,\n        keyType: event.keyType\n      }\n    } catch (e) {\n      throw new Error(`AddKey failed, Message: ${e}`)\n    }\n  }\n\n  async removeKey (key, purpose) {\n    try {\n      const receipt = await this.keyManager.methods.removeKey(key, purpose).send({\n        from: this.from,\n        gas: this.defaultGas\n      })\n      const event = receipt.events.KeyRemoved.returnValues\n      return {\n        key: event.key,\n        purpose: event.purpose,\n        keyType: event.keyType\n      }\n    } catch (e) {\n      throw new Error(`RemoveKey failed, Message: ${e}`)\n    }\n  }\n\n  async revoke () {\n    try {\n      await this.identity.methods.kill().send({\n        from: this.from,\n        gas: this.defaultGas\n      })\n      return true\n    } catch (e) {\n      throw new Error(`Revoke failed. Message: ${e}`)\n    }\n  }\n}\n\nexport default Identity\n","import ERC725DID from './erc725did.js'\nexport default ERC725DID\n","import Identity from './identity.js'\n\nexport default class ERC725DID {\n  constructor ({ web3 }) {\n    if (!web3) throw new Error('There is no web3 provider.')\n    this.web3 = web3\n  }\n\n  async register ({ from, gas }) {\n    const identity = new Identity(this.web3)\n    await identity.init({ from, gas })\n    return identity\n  }\n\n  async connect (did) {\n    const identity = new Identity(this.web3, did)\n    await identity.init()\n    return identity\n  }\n}\n"],"sourceRoot":""}